name: Deploy
on:
  push:
    branches:
      - '*'
  pull_request:
    types: [opened, synchronized, reopened]

jobs:
  deploy-image:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./

    steps:
    - uses: actions/checkout@v4

    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch

    - id: "auth"
      uses: "google-github-actions/auth@v1"
      with:
        credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

    - name: "Set up Cloud SDK"
      uses: "google-github-actions/setup-gcloud@v1"

    - name: "Use gcloud CLI"
      run: "gcloud info"

    - name: "Docker auth"
      run: |-
        gcloud auth configure-docker europe-west2-docker.pkg.dev --quiet

    - name: Build and push Docker image
      run: |-
        docker build -t europe-west2-docker.pkg.dev/${{ vars.GCP_PROJECT }}/kitchen-inventory/kitchen-inv-app:${{ steps.extract_branch.outputs.branch }} .
        docker push europe-west2-docker.pkg.dev/${{ vars.GCP_PROJECT }}/kitchen-inventory/kitchen-inv-app:${{ steps.extract_branch.outputs.branch }}

  deploy-resources:
    needs: deploy-image
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    - uses: actions/checkout@v4

    - name: Setup terraform variables
      id: vars
      run: |-
        cat > pipeline.auto.tfvars <<EOF
        region="${{ vars.GCP_REGION }}"
        project="${{ vars.GCP_PROJECT }}"
        data-project="${{ vars.GCP_DATA_PROJECT }}"
        EOF

    - name: Terraform Init
      run: terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

    - name: Terraform Plan
      run: terraform plan -input=false
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
